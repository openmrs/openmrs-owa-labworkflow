// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LabResultEntry /> component renders correctly with valid props 1`] = `
<Provider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
  location={
    Object {
      "state": Object {},
    }
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <HashRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(LabResultEntry)
        clearNameEMRField={[MockFunction]}
        conceptMembers={
          Object {
            "1234-abcd": Object {
              "hiAbsolute": 25,
              "hiCritical": 30,
              "hiNormal": 22,
              "lowAbsolute": 9,
              "lowCritical": 3,
              "lowNormal": 11,
              "units": "cc",
            },
            "pqrs-5678": Object {
              "hiAbsolute": 25,
              "hiCritical": 30,
              "hiNormal": 22,
              "lowAbsolute": 9,
              "lowCritical": 3,
              "lowNormal": 11,
              "units": "cc",
            },
          }
        }
        history={
          Object {
            "location": Object {
              "state": Object {
                "concept": Object {
                  "display": "Hémogramme automatisé",
                  "uuid": "9i9i-99090-999",
                },
                "dateActivated": "2018-08-30T17:34:19.000+0100",
                "labResult": Object {
                  "encounter": Object {
                    "encounterDatetime": "2018-08-30T17:34:19.000+0100",
                  },
                  "resultStatus": "Reported",
                },
                "orderNumber": "ORD-1",
                "patient": Object {
                  "display": "Y2A7LR - williams willy john",
                },
                "urgency": "ROUTINE",
              },
            },
          }
        }
        labTests={
          Array [
            "Hémogramme automatisé",
          ]
        }
        location={
          Object {
            "state": Object {
              "auditInfo": Object {
                "dateCreated": "2018-08-30T17:34:19.000+0100",
              },
              "concept": Object {
                "display": "Hémogramme automatisé",
              },
              "dateActivated": "2018-08-30T17:34:19.000+0100",
              "labResult": Object {
                "encounter": Object {
                  "encounterDatetime": "2018-08-30T17:34:19.000+0100",
                },
                "resultStatus": "Reported",
              },
              "orderNumber": "ORD-1",
              "patient": Object {
                "display": "Y2A7LR - williams willy john",
              },
              "urgency": "ROUTINE",
            },
          }
        }
        nameField=""
        patients={
          Object {
            "some-patient-uuid": Object {
              "display": "Y2A7LR - williams willy john",
            },
          }
        }
        selectedPatient="some-patient-uuid"
      >
        <LabResultEntry
          clearNameEMRField={[MockFunction]}
          conceptMembers={
            Object {
              "1234-abcd": Object {
                "hiAbsolute": 25,
                "hiCritical": 30,
                "hiNormal": 22,
                "lowAbsolute": 9,
                "lowCritical": 3,
                "lowNormal": 11,
                "units": "cc",
              },
              "pqrs-5678": Object {
                "hiAbsolute": 25,
                "hiCritical": 30,
                "hiNormal": 22,
                "lowAbsolute": 9,
                "lowCritical": 3,
                "lowNormal": 11,
                "units": "cc",
              },
            }
          }
          dispatch={[Function]}
          formId="mockForm"
          hasCache={false}
          history={
            Object {
              "location": Object {
                "state": Object {
                  "concept": Object {
                    "display": "Hémogramme automatisé",
                    "uuid": "9i9i-99090-999",
                  },
                  "dateActivated": "2018-08-30T17:34:19.000+0100",
                  "labResult": Object {
                    "encounter": Object {
                      "encounterDatetime": "2018-08-30T17:34:19.000+0100",
                    },
                    "resultStatus": "Reported",
                  },
                  "orderNumber": "ORD-1",
                  "patient": Object {
                    "display": "Y2A7LR - williams willy john",
                  },
                  "urgency": "ROUTINE",
                },
              },
            }
          }
          isDidNotPerformCheckboxSelected={false}
          labResultsDidNotPerformReasonAnswer="mock-uuid"
          labResultsTestLocationAnswer="mock-uuid"
          labTests={
            Array [
              "Hémogramme automatisé",
            ]
          }
          location={
            Object {
              "state": Object {
                "auditInfo": Object {
                  "dateCreated": "2018-08-30T17:34:19.000+0100",
                },
                "concept": Object {
                  "display": "Hémogramme automatisé",
                },
                "dateActivated": "2018-08-30T17:34:19.000+0100",
                "labResult": Object {
                  "encounter": Object {
                    "encounterDatetime": "2018-08-30T17:34:19.000+0100",
                  },
                  "resultStatus": "Reported",
                },
                "orderNumber": "ORD-1",
                "patient": Object {
                  "display": "Y2A7LR - williams willy john",
                },
                "urgency": "ROUTINE",
              },
            }
          }
          nameField=""
          orders={Array []}
          patients={
            Object {
              "some-patient-uuid": Object {
                "display": "Y2A7LR - williams willy john",
              },
            }
          }
          selectedLabConcept={
            Object {
              "answers": Array [],
              "set": true,
              "setMembers": Array [
                Object {
                  "answers": Array [],
                  "display": "Height",
                  "uuid": "1234-abcd",
                },
                Object {
                  "answers": Array [],
                  "display": "Weight",
                  "uuid": "pqrs-5678",
                },
              ],
            }
          }
          selectedPatient="some-patient-uuid"
        >
          <div
            className="container-fluid"
          >
            <div>
              <h2
                className="lab-entry-page-title"
              >
                <FormattedMessage
                  defaultMessage="Test Results -"
                  id="app.labResultEntry.title"
                  values={Object {}}
                >
                  <span>
                    Test Results -
                  </span>
                </FormattedMessage>
                 null
              </h2>
              <div
                className="lab-result-detail-fieldset-container"
              >
                <div
                  className="fieldset-container lab-result-detail-fieldset"
                >
                  <div
                    className="legend"
                  >
                    <span
                      className="lab-result-detail-fieldset-title"
                    >
                      <FormattedMessage
                        defaultMessage="Specimen Details"
                        id="app.labResultEntry.specimenDetails"
                        values={Object {}}
                      >
                        <span>
                          Specimen Details
                        </span>
                      </FormattedMessage>
                    </span>
                  </div>
                </div>
                <div
                  className="fieldset-container lab-result-detail-fieldset"
                >
                  <div
                    className="legend"
                  >
                    <span
                      className="lab-result-detail-fieldset-title"
                    >
                      <FormattedMessage
                        defaultMessage="Order Details"
                        id="app.labResultEntry.orderDetails"
                        values={Object {}}
                      >
                        <span>
                          Order Details
                        </span>
                      </FormattedMessage>
                    </span>
                  </div>
                  <div
                    className="fieldset-body"
                  >
                    <div
                      className="col-xs-12 col-md-7"
                    >
                      <span
                        className="test-details-label"
                      >
                        <FormattedMessage
                          defaultMessage="Order Number:"
                          id="app.labResultEntry.orderNumberlabel"
                          values={Object {}}
                        >
                          <span>
                            Order Number:
                          </span>
                        </FormattedMessage>
                         
                        <span
                          className="test-details"
                        >
                          ORD-1
                        </span>
                      </span>
                    </div>
                    <div
                      className="col-xs-12 col-md-5"
                    >
                      <span
                        className="test-details-label"
                      >
                        <FormattedMessage
                          defaultMessage="Urgency"
                          id="app.labResultEntry.urgencylabel"
                          values={Object {}}
                        >
                          <span>
                            Urgency
                          </span>
                        </FormattedMessage>
                        : 
                        <span
                          className="urgencyDetails urgency routine"
                        >
                          ROUTINE
                        </span>
                      </span>
                    </div>
                    <div
                      className="col-xs-12 order-date-detail"
                    >
                      <span
                        className="test-details-label"
                      >
                        <FormattedMessage
                          defaultMessage="Order Date:"
                          id="app.labResultEntry.orderDatelabel"
                          values={Object {}}
                        >
                          <span>
                            Order Date:
                          </span>
                        </FormattedMessage>
                         
                        <span
                          className="test-details"
                        >
                          Aug 30 9:34 AM
                        </span>
                      </span>
                    </div>
                    <div
                      className="col-xs-12"
                    >
                      <span
                        className="test-details-label col-xs-3"
                      >
                        <FormattedMessage
                          defaultMessage="Lab ID"
                          id="app.labResultEntry.labId"
                          values={Object {}}
                        >
                          <span>
                            Lab ID
                          </span>
                        </FormattedMessage>
                        : 
                      </span>
                      <span
                        className="col-xs-6"
                      />
                    </div>
                    <br />
                    <br />
                  </div>
                </div>
              </div>
            </div>
            <br />
            <br />
            <div>
              <div
                className="fieldset-container lab-entry-result-details"
              >
                <div
                  className="legend"
                >
                  <span>
                    <FormattedMessage
                      defaultMessage="Result Details"
                      id="app.labResultEntry.resultDetails"
                      values={Object {}}
                    >
                      <span>
                        Result Details
                      </span>
                    </FormattedMessage>
                  </span>
                </div>
                <div
                  className="fieldset-body"
                >
                  <span
                    className="range-header-text"
                  >
                    <FormattedMessage
                      defaultMessage="NORMAL RANGE"
                      id="app.labOrdersList.NORMAL_RANGE"
                      values={Object {}}
                    >
                      <span>
                        NORMAL RANGE
                      </span>
                    </FormattedMessage>
                  </span>
                </div>
              </div>
            </div>
          </div>
        </LabResultEntry>
      </Connect(LabResultEntry)>
    </Router>
  </HashRouter>
</Provider>
`;

exports[`<LabResultEntry /> component should redirect when location has an empty state 1`] = `
<HashRouter
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "textComponent": "span",
    }
  }
>
  <Router
    history={
      Object {
        "action": "REPLACE",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(LabResultEntry)
      clearNameEMRField={[MockFunction]}
      conceptMembers={
        Object {
          "1234-abcd": Object {
            "hiAbsolute": 25,
            "hiCritical": 30,
            "hiNormal": 22,
            "lowAbsolute": 9,
            "lowCritical": 3,
            "lowNormal": 11,
            "units": "cc",
          },
          "pqrs-5678": Object {
            "hiAbsolute": 25,
            "hiCritical": 30,
            "hiNormal": 22,
            "lowAbsolute": 9,
            "lowCritical": 3,
            "lowNormal": 11,
            "units": "cc",
          },
        }
      }
      history={
        Object {
          "location": Object {
            "state": Object {
              "concept": Object {
                "display": "Hémogramme automatisé",
                "uuid": "9i9i-99090-999",
              },
              "dateActivated": "2018-08-30T17:34:19.000+0100",
              "labResult": Object {
                "encounter": Object {
                  "encounterDatetime": "2018-08-30T17:34:19.000+0100",
                },
                "resultStatus": "Reported",
              },
              "orderNumber": "ORD-1",
              "patient": Object {
                "display": "Y2A7LR - williams willy john",
              },
              "urgency": "ROUTINE",
            },
          },
        }
      }
      labTests={
        Array [
          "Hémogramme automatisé",
        ]
      }
      location={
        Object {
          "state": null,
        }
      }
      nameField=""
      patients={
        Object {
          "some-patient-uuid": Object {
            "display": "Y2A7LR - williams willy john",
          },
        }
      }
      selectedLabConcept={Object {}}
      selectedPatient="some-patient-uuid"
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <LabResultEntry
        clearNameEMRField={[MockFunction]}
        dispatch={[Function]}
        formId="mockForm"
        hasCache={false}
        history={
          Object {
            "location": Object {
              "state": Object {
                "concept": Object {
                  "display": "Hémogramme automatisé",
                  "uuid": "9i9i-99090-999",
                },
                "dateActivated": "2018-08-30T17:34:19.000+0100",
                "labResult": Object {
                  "encounter": Object {
                    "encounterDatetime": "2018-08-30T17:34:19.000+0100",
                  },
                  "resultStatus": "Reported",
                },
                "orderNumber": "ORD-1",
                "patient": Object {
                  "display": "Y2A7LR - williams willy john",
                },
                "urgency": "ROUTINE",
              },
            },
          }
        }
        isDidNotPerformCheckboxSelected={false}
        labResultsDidNotPerformReasonAnswer="mock-uuid"
        labResultsTestLocationAnswer="mock-uuid"
        labTests={
          Array [
            "Hémogramme automatisé",
          ]
        }
        location={
          Object {
            "state": null,
          }
        }
        nameField=""
        orders={Array []}
        selectedLabConcept={null}
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          }
        }
      >
        <Redirect
          push={false}
          to="/"
        />
      </LabResultEntry>
    </Connect(LabResultEntry)>
  </Router>
</HashRouter>
`;

exports[`<LabResultEntry /> component should render <Loader /> component when selectedLabConcept is empty 1`] = `
<Connect(LabResultEntry)
  clearNameEMRField={[MockFunction]}
  conceptMembers={
    Object {
      "1234-abcd": Object {
        "hiAbsolute": 25,
        "hiCritical": 30,
        "hiNormal": 22,
        "lowAbsolute": 9,
        "lowCritical": 3,
        "lowNormal": 11,
        "units": "cc",
      },
      "pqrs-5678": Object {
        "hiAbsolute": 25,
        "hiCritical": 30,
        "hiNormal": 22,
        "lowAbsolute": 9,
        "lowCritical": 3,
        "lowNormal": 11,
        "units": "cc",
      },
    }
  }
  history={
    Object {
      "location": Object {
        "state": Object {
          "concept": Object {
            "display": "Hémogramme automatisé",
            "uuid": "9i9i-99090-999",
          },
          "dateActivated": "2018-08-30T17:34:19.000+0100",
          "labResult": Object {
            "encounter": Object {
              "encounterDatetime": "2018-08-30T17:34:19.000+0100",
            },
            "resultStatus": "Reported",
          },
          "orderNumber": "ORD-1",
          "patient": Object {
            "display": "Y2A7LR - williams willy john",
          },
          "urgency": "ROUTINE",
        },
      },
    }
  }
  labTests={
    Array [
      "Hémogramme automatisé",
    ]
  }
  location={
    Object {
      "state": Object {
        "auditInfo": Object {
          "dateCreated": "2018-08-30T17:34:19.000+0100",
        },
        "concept": Object {
          "display": "Hémogramme automatisé",
        },
        "dateActivated": "2018-08-30T17:34:19.000+0100",
        "labResult": Object {
          "encounter": Object {
            "encounterDatetime": "2018-08-30T17:34:19.000+0100",
          },
          "resultStatus": "Reported",
        },
        "orderNumber": "ORD-1",
        "patient": Object {
          "display": "Y2A7LR - williams willy john",
        },
        "urgency": "ROUTINE",
      },
    }
  }
  nameField=""
  patients={
    Object {
      "some-patient-uuid": Object {
        "display": "Y2A7LR - williams willy john",
      },
    }
  }
  selectedLabConcept={Object {}}
  selectedPatient="some-patient-uuid"
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <LabResultEntry
    clearNameEMRField={[MockFunction]}
    dispatch={[Function]}
    formId="mockForm"
    hasCache={false}
    history={
      Object {
        "location": Object {
          "state": Object {
            "concept": Object {
              "display": "Hémogramme automatisé",
              "uuid": "9i9i-99090-999",
            },
            "dateActivated": "2018-08-30T17:34:19.000+0100",
            "labResult": Object {
              "encounter": Object {
                "encounterDatetime": "2018-08-30T17:34:19.000+0100",
              },
              "resultStatus": "Reported",
            },
            "orderNumber": "ORD-1",
            "patient": Object {
              "display": "Y2A7LR - williams willy john",
            },
            "urgency": "ROUTINE",
          },
        },
      }
    }
    isDidNotPerformCheckboxSelected={false}
    labResultsDidNotPerformReasonAnswer="mock-uuid"
    labResultsTestLocationAnswer="mock-uuid"
    labTests={
      Array [
        "Hémogramme automatisé",
      ]
    }
    location={
      Object {
        "state": Object {
          "auditInfo": Object {
            "dateCreated": "2018-08-30T17:34:19.000+0100",
          },
          "concept": Object {
            "display": "Hémogramme automatisé",
          },
          "dateActivated": "2018-08-30T17:34:19.000+0100",
          "labResult": Object {
            "encounter": Object {
              "encounterDatetime": "2018-08-30T17:34:19.000+0100",
            },
            "resultStatus": "Reported",
          },
          "orderNumber": "ORD-1",
          "patient": Object {
            "display": "Y2A7LR - williams willy john",
          },
          "urgency": "ROUTINE",
        },
      }
    }
    nameField=""
    orders={Array []}
    selectedLabConcept={Object {}}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
  >
    <Loader>
      <div
        className="custom-loader"
      >
        <div />
        <div />
        <div />
        <div />
        <div />
        <div />
        <div />
        <div />
        <div />
        <div />
        <div />
        <div />
      </div>
    </Loader>
  </LabResultEntry>
</Connect(LabResultEntry)>
`;
